{"version":3,"sources":["Home.js","About.js","Video.js","Audio.js","ObjectDetection.js","useRWD.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","className","pageName","About","Video","btnStart","btnStop","btnDownload","useReactMediaRecorder","video","blobPropertyBag","type","status","startRecording","stopRecording","mediaBlobUrl","stoppedRec","a","onClick","link","document","createElement","setAttribute","style","visibility","body","appendChild","http","XMLHttpRequest","open","send","console","log","click","removeChild","width","height","src","controls","autoPlay","loop","Audio","audio","ObjectDetection","webcamRef","useRef","videoConstraints","videoHeight","videoWidth","maxWidth","facingMode","useState","loaded","setload","model","setModel","object","setObject","rate","setRate","clicked","setClick","cocoSsd","predictMe","detect","getElementById","predictions","cnvs","ctx","getContext","clearRect","length","i","predictObject","class","predictRate","Math","round","parseFloat","score","bboxLeft","bbox","bboxTop","bboxWidth","bboxHeight","beginPath","font","fillStyle","fillText","rect","strokeStyle","lineWidth","stroke","setTimeout","useEffect","tf","then","loadModel","id","ref","screenshotQuality","screenshotFormat","useRWD","device","setDevice","handleRWD","window","innerWidth","addEventListener","removeEventListener","App","Date","getTime","setTime","setInterval","clearInterval","to","toLocaleDateString","toLocaleTimeString","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a2e5fdc6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Home.css\";\r\n\r\nfunction Home(props) {\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"title\">{props.pageName}</div>\r\n      <div className=\"pageContent\"><p>This is an exercise in Github webpage to experience how REACT JSX is applied. Comparing to Class Function, REACT Hook is selected as it is more flexible to interact with different web pages. In this exercise, useState, useEffect and Router etc. are included. REACT V6 makes the structure easier than pervious version.</p><p>Although JavaScript, HTML and CSS have been used for years, this exercise still requires certain time to understand REACT especially it is easy to be confused with some online articles which are using V5. It is the first REACT exercise and GUI design. After more practices are done, technique of using REACT should be enhanced.</p><p>For privacy, all video and audio are processed in the browser environment. There is no server connection as it is the nature of Github. Hence, there is not any records to be transferred to any unknown backend.</p><p>At last, an Object Detection page which is based on TensorFlow.js is added. The dataset is CoCo and model is SSD.</p></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport \"./About.css\";\r\n\r\nfunction About(props) {\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"title\">{props.pageName}</div>\r\n      <div className=\"pageContent\"><p>The main stream in this exercise is REACT HOOK. In order to make this in Github web page while showing some features, there is not server end service to be involved. The features include capturing Video and Audio which are easily connected by Web Browsers in every laptop.</p><p>There are three buttons in Video and Audio page. Users can start recording; stop recording and download the recording. Please feel free to test.</p><p>The last page is Object Detection. The page takes time to load the model before being used. Once the model is loaded, user can start the prediction by clicking the button. If user want to stop the prediction, camera usage can be terminated by closing the browser or clicking other page in top menu.</p></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport { useReactMediaRecorder } from \"react-media-recorder\";\r\nimport \"./Video.css\";\r\n\r\nfunction Video(props) {\r\n  const {\r\n    status,\r\n    startRecording,\r\n    stopRecording,\r\n    mediaBlobUrl,\r\n  } = useReactMediaRecorder({\r\n    video: true,\r\n    blobPropertyBag: {type: \"video/mp4\"}\r\n  })\r\n  let btnStart, btnStop, btnDownload;\r\n  const startedRec = () => {\r\n    startRecording();\r\n  }\r\n  const stoppedRec = async () => {\r\n    stopRecording();\r\n  }\r\n  const downloadRec = () => {\r\n    let link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", mediaBlobUrl);\r\n    link.setAttribute(\"download\", \"demo.mp4\");\r\n    link.style.visibility = 'hidden';\r\n    document.body.appendChild(link);\r\n    try {\r\n      let http = new XMLHttpRequest();\r\n      http.open('HEAD', link, false);\r\n      http.send();\r\n      console.log(http.status);\r\n    } catch {\r\n      console.log(\"File exist!\");\r\n      link.click();\r\n    }\r\n    document.body.removeChild(link);\r\n  }\r\n  if (status===\"stopped\") {\r\n    btnDownload=\"btnEnable\";\r\n  } else {\r\n    btnDownload=\"btnDisable\";\r\n  }\r\n  if (status===\"idle\" || status===\"stopped\") {\r\n    btnStart = \"btnEnable\";\r\n    btnStop = \"btnDisable\";\r\n  } else {\r\n    btnStart = \"btnDisable\";\r\n    btnStop = \"btnEnable\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"title\">{props.pageName}</div>\r\n      <div className=\"pageContent\">\r\n        <div className=\"button\">\r\n          <button className={btnStart} onClick={startedRec}>Start Recording</button>\r\n          <button className={btnStop} onClick={stoppedRec}>Stop Recording</button>\r\n          <button className={btnDownload} onClick={downloadRec}>Download Recording</button>\r\n        </div>\r\n        <div className=\"status\">STATUS: {status}</div>\r\n        <div>\r\n          <video width={320} height={240} src={mediaBlobUrl} controls autoPlay loop />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default Video;","import React from 'react';\r\nimport { useReactMediaRecorder } from \"react-media-recorder\";\r\nimport \"./Audio.css\";\r\n\r\nfunction Audio(props) {\r\n  const {\r\n    status,\r\n    startRecording,\r\n    stopRecording,\r\n    mediaBlobUrl,\r\n  } = useReactMediaRecorder({\r\n    audio: true,\r\n    blobPropertyBag: {type: \"audio/wav\"}\r\n  })\r\n  let btnStart, btnStop, btnDownload;\r\n  const startedRec = () => {\r\n    startRecording();\r\n  }\r\n  const stoppedRec = async () => {\r\n    stopRecording();\r\n  }\r\n  const downloadRec = () => {\r\n    let link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", mediaBlobUrl);\r\n    link.setAttribute(\"download\", \"demo.wav\");\r\n    link.style.visibility = 'hidden';\r\n    document.body.appendChild(link);\r\n    try {\r\n      let http = new XMLHttpRequest();\r\n      http.open('HEAD', link, false);\r\n      http.send();\r\n      console.log(http.status);\r\n    } catch {\r\n      console.log(\"File exist!\");\r\n      link.click();\r\n    }\r\n    document.body.removeChild(link);\r\n  }\r\n  if (status===\"stopped\") {\r\n    btnDownload=\"btnEnable\";\r\n  } else {\r\n    btnDownload=\"btnDisable\";\r\n  }\r\n  if (status===\"idle\" || status===\"stopped\") {\r\n    btnStart = \"btnEnable\";\r\n    btnStop = \"btnDisable\";\r\n  } else {\r\n    btnStart = \"btnDisable\";\r\n    btnStop = \"btnEnable\";\r\n  }\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"title\">{props.pageName}</div>\r\n      <div className=\"pageContent\">\r\n        <div className=\"button\">\r\n          <button className={btnStart} onClick={startedRec}>Start Recording</button>\r\n          <button className={btnStop} onClick={stoppedRec}>Stop Recording</button>\r\n          <button className={btnDownload} onClick={downloadRec}>Download Recording</button>\r\n        </div>\r\n        <div className=\"status\">STATUS: {status}</div>\r\n        <div>\r\n          <audio src={mediaBlobUrl} controls autoPlay loop/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default Audio;","import React, { useEffect, useState, useRef } from \"react\";\r\nimport * as cocoSsd from \"@tensorflow-models/coco-ssd\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport Webcam from \"react-webcam\";\r\nimport './ObjectDetection.css';\r\n\r\nfunction ObjectDetection(props) {\r\n  const webcamRef = useRef(null);\r\n  const videoWidth = 960;\r\n  const videoHeight = 640;\r\n  const videoConstraints = {\r\n    height: {videoHeight},\r\n    width: {videoWidth},\r\n    maxWidth: \"100vw\",\r\n    facingMode: \"user\",\r\n  };\r\n  /*\r\n  async function drawMe() {\r\n    let canvas = document.getElementById(\"camCanvas\");\r\n    let ctx = canvas.getContext(\"2d\");\r\n    ctx.globalAlpha = 0.1;\r\n    ctx.fillStyle = \"#FF0000\";\r\n    ctx.fillRect(0, 0, 80, 80);\r\n  }\r\n  */\r\n  const [loaded, setload] = useState(0);\r\n  const [model, setModel] = useState();\r\n  const [object, setObject] = useState();\r\n  const [rate, setRate] = useState();\r\n  const [clicked, setClick] = useState(0);\r\n  async function loadModel() {\r\n    try {\r\n      const model = await cocoSsd.load();\r\n      setload(1);\r\n      setModel(model);\r\n      console.log(\"setloadedModel\");\r\n    } catch (err) {\r\n      console.log(err);\r\n      console.log(\"failed load model\");\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    tf.ready().then(() => {\r\n      loadModel();\r\n    });\r\n  }, []);\r\n  async function predictMe() {\r\n    try {\r\n      const predictions = await model.detect(document.getElementById(\"img\"));\r\n      setClick(1);\r\n      let cnvs = document.getElementById(\"camCanvas\");\r\n      let ctx = cnvs.getContext(\"2d\");\r\n      //ctx.globalAlpha = 0.5;\r\n      //ctx.clearRect(\r\n      //  0,\r\n      //  0,\r\n      //  webcamRef.current.video.videoWidth,\r\n      //  webcamRef.current.video.videoHeight\r\n      //)\r\n      ctx.clearRect(0, 0, 1920, 1080);\r\n      if (predictions.length > 0) {\r\n        //console.log(predictions);\r\n        \r\n        for (let i = 0; i < predictions.length; i++) {\r\n          let predictObject = predictions[i].class;\r\n          let predictRate = Math.round(parseFloat(predictions[i].score) * 100);\r\n          let bboxLeft = predictions[i].bbox[0];\r\n          let bboxTop = predictions[i].bbox[1];\r\n          let bboxWidth = predictions[i].bbox[2];\r\n          let bboxHeight = predictions[i].bbox[3] - predictions[i].bbox[1];\r\n          ctx.beginPath();\r\n          ctx.font = \"28px Arial\";\r\n          ctx.fillStyle = \"red\";\r\n          ctx.fillText(\r\n            predictObject + \":\" + predictRate + \"%\",\r\n            bboxLeft,\r\n            bboxTop\r\n          );\r\n          ctx.rect(bboxLeft, bboxTop, bboxWidth, bboxHeight);\r\n          ctx.strokeStyle = \"#FF0000\";\r\n          ctx.lineWidth = 3;\r\n          ctx.stroke();\r\n          //ctx.clearRect(0, 0, 1920, 1080);\r\n          //console.log(\"Object: \", predictObject);\r\n          //console.log(\"Percent: \", predictRate);\r\n          setObject(predictObject);\r\n          setRate(predictRate);\r\n          //console.log(\"Left: \", bboxLeft);\r\n          //console.log(\"Top: \", bboxTop);\r\n          //console.log(\"Width: \", bboxWidth);\r\n          //console.log(\"Height: \", bboxHeight); \r\n        }\r\n      }\r\n      setTimeout(() => predictMe(), 500);\r\n    } catch (err) {\r\n      console.log(\"Exited Detection!\")\r\n    }\r\n  }\r\n\r\n  return (\r\n      <div className=\"main\">\r\n        <div className=\"title\">{props.pageName}</div>\r\n        <div className=\"pageContent\">\r\n          {loaded===0 && <div className=\"lds-ellipsis\">Loading...<div></div><div></div><div></div><div></div></div>}\r\n          {loaded===1 &&\r\n            <div className=\"button\">\r\n              <button onClick={()=>{predictMe()}}>Predict</button>\r\n              {object}{clicked===1 && \":\"} {rate}{clicked===1 && \"%\"}\r\n            </div>\r\n          }\r\n          <div className=\"screen\">\r\n            <canvas id=\"camCanvas\" width={videoWidth} height={videoHeight} />\r\n          </div>\r\n          <div className=\"webcam\">\r\n            <Webcam\r\n              audio={false}\r\n              id=\"img\"\r\n              ref={webcamRef}\r\n              screenshotQuality={1}\r\n              screenshotFormat=\"image/jpeg\"\r\n              videoConstraints={videoConstraints}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default ObjectDetection;","import { useState,useEffect} from 'react';\r\n\r\nconst useRWD=()=>{\r\n    const [device,setDevice]=useState(\"mobile\");\r\n\r\n    const handleRWD=()=>{\r\n        if(window.innerWidth>768)\r\n            setDevice(\"PC-size\");\r\n        else if (window.innerWidth>576)\r\n            setDevice(\"tablet-size\");\r\n        else\r\n            setDevice(\"mobile-size\");\r\n    }\r\n\r\n    useEffect(()=>{ \r\n        window.addEventListener('resize',handleRWD);\r\n        handleRWD();\r\n        return(()=>{\r\n            window.removeEventListener('resize',handleRWD);\r\n        })\r\n    },[]);\r\n\r\n    return device;\r\n}\r\n\r\nexport default useRWD;","import React, {useState, useEffect} from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport './App.css';\nimport Home from \"./Home\";\nimport About from \"./About\";\nimport Video from \"./Video\";\nimport Audio from \"./Audio\";\nimport ObjectDetection from \"./ObjectDetection\"\nimport useRWD from \"./useRWD\";\n\nfunction App() {\n  const device=useRWD();\n  const [getTime, setTime] = useState(new Date());\n  useEffect(()=>{\n    const id = setInterval(()=>setTime(new Date()),1000);\n    return()=>{clearInterval(id)};\n    },[]);\n  return (\n    <Router>\n      <div className=\"top\">\n        <span className=\"spanLeft\">\n        <nav>\n          <Link className=\"link\" to=\"/\">\n            Home\n          </Link>\n          <Link className=\"link\" to=\"/about\">\n            About\n          </Link>\n          <Link className=\"link\" to=\"/video\">\n            Video\n          </Link>\n          <Link className=\"link\" to=\"/audio\">\n            Audio\n          </Link>\n          <Link className=\"link\" to=\"/objectdetection\">\n            Object-Detection\n          </Link>\n        </nav>\n        </span>\n        <span className=\"spanRight\">\n          {getTime.toLocaleDateString()} {getTime.toLocaleTimeString()} ({device})\n        </span>\n        <div className=\"divBreak\"/>\n      </div>\n      <Routes>\n        <Route path=\"/\" element={<Home pageName=\"Home\"/>} />\n        <Route path=\"/react_media_recorder\" element={<Home pageName=\"Home\"/>} />\n        <Route path=\"/about\" element={<About pageName=\"About\"/>} />\n        <Route path=\"/video\" element={<Video pageName=\"Video\"/>} />\n        <Route path=\"/audio\" element={<Audio pageName=\"Audio\"/>} />\n        <Route path=\"/objectdetection\" element={<ObjectDetection pageName=\"Object-Detection\"/>} />\n      </Routes>\n    </Router>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}